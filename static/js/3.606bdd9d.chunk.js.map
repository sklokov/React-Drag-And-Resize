{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/IMG_8006.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","mainPhoto","contact","textBlock","statusBlock","postsBlock","posts","item","__webpack_require__","p","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","style","formBlock","onSubmit","Button","variant","size","color","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","onMainPhotoSelected","target","files","length","src","photos","large","userPhoto","Fragment","event","document","getElementById","click","id","display","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","postLogo","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","toConsumableArray","reverse","MyPosts_Post_Post","createRef","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.606bdd9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__18fsh\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1r5ST\",\"contact\":\"ProfileInfo_contact__2sL0r\",\"textBlock\":\"ProfileInfo_textBlock__cQGmZ\",\"statusBlock\":\"ProfileInfo_statusBlock__1NQuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3KLBf\",\"posts\":\"MyPosts_posts__3ANFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1PRkh\"};","module.exports = __webpack_public_path__ + \"static/media/IMG_8006.f14d0b17.jpg\";","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form className={style.formBlock} onSubmit={handleSubmit}>\r\n        <div><Button variant=\"contained\" size=\"small\" color=\"primary\">save</Button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    const FileUploader = () => {\r\n        const handleClick = event => {\r\n            document.getElementById('hiddenFileInput').click();\r\n        };\r\n        return (\r\n            <>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleClick}>\r\n                    Upload a file\r\n                </Button>\r\n                <input type=\"file\" id=\"hiddenFileInput\" onChange={onMainPhotoSelected} style={{display:'none'}}/>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <FileUploader /> }\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.textBlock}>\r\n        {isOwner && <div><Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={goToEditMode}>edit</Button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport postLogo from \"../../../../assets/images/IMG_8006.jpg\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={postLogo} />\r\n        { props.message }\r\n          <div>\r\n        <span>likes</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n       // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}