{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","hover","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","active","NavLink","to","name","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","inherits","_super","_createSuper","classCallCheck","this","apply","arguments","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,MAAA,uBAAAC,SAAA,0BAAAC,QAAA,2HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAIV,GAAOD,EAAMY,QCDnBC,EAJC,SAACb,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMF,qDCCtCgB,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,2BAAjBD,CAfQ,SAAChB,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMa,SAAUlB,EAAMmB,cAClBhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBb,KAAK,oBAEjDT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BCoBDqB,EA5BC,SAAC1B,GAGb,IAAI2B,EAAQ3B,EAAM4B,YACdC,EAAkBF,EAAMjC,QAAQoC,IAAK,SAAAC,GAAC,OAAI5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMqB,IAAKF,EAAE7B,GAAIA,GAAI6B,EAAE7B,OACrFgC,EAAmBP,EAAM9B,SAASiC,IAAK,SAAAK,GAAC,OAAIhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAStC,QAASqC,EAAErC,QAASmC,IAAKE,EAAEjC,OAC/DyB,EAAMU,eAM3B,OAAKrC,EAAMsC,OAGPnC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,cACZkC,GAEN1B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACdM,EAAAC,EAAAC,cAAA,WAAO6B,IAGX/B,EAAAC,EAAAC,cAACkC,EAAD,CAAgBrB,SAfJ,SAACsB,GACjBxC,EAAMyC,YAAYD,EAAOH,oBAGHlC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAU/B,GAAI,4fChB5C,IAAIgC,EAA6B,SAAChB,GAAD,MAAY,CACzCW,OAAQX,EAAMiB,KAAKN,gBCgBRO,sBACXC,YAdkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACmB,GACtB,MAAO,CACHN,YAAa,SAACJ,GACVU,EAASC,YAAmBX,QDRR,SAACY,GAAc,IAErCC,EAFqC,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAC,EAAAL,GAAA,SAAAA,IAAA,OAAAE,OAAAI,EAAA,EAAAJ,CAAAK,KAAAP,GAAAI,EAAAI,MAAAD,KAAAE,WAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAjB,IAAA,SAAA4B,MAAA,WAInC,OAAKJ,KAAKzD,MAAMsC,OAETnC,EAAAC,EAAAC,cAAC4C,EAAcQ,KAAKzD,OAFIG,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAU/B,GAAG,eAJTuC,EAAA,CAEXY,IAAMb,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,ICG9DL,CAGbnB","file":"static/js/4.e9befdcc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1BA0K\",\"dialogsItems\":\"Dialogs_dialogsItems__rEULI\",\"hover\":\"Dialogs_hover__39xzy\",\"messages\":\"Dialogs_messages__3vSUW\",\"message\":\"Dialogs_message__1R4x4\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    debugger;\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}